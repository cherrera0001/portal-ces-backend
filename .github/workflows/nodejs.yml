# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Portal Backend - Node.js CI

on: push
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: amicar
          MONGO_INITDB_ROOT_PASSWORD: amicar
        volumes:
          - init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

    strategy:
      matrix:
        node-version: [8.x]
        mongodb-version: [4.0]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - run: mongo init-mongo.js
    - run: npm install
    - run: npm run test
      env:
        TERM: xterm
    - run: npm build
    env:
      CI: true
      NODE_ENV: test
      PORT: 8085
      SERVER_HOST: 127.0.0.1
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: amicar
      MONGO_INITDB_ROOT_PASSWORD: amicar
      MONGO_USERNAME: amicar
      MONGO_PASSWORD: amicar
      MONGO_DB: amicar
      MONGO_HOST: 127.0.0.1:27017
      ACTIONS_RUNNER_DEBUG: true
  deploy_staging:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        export_default_credentials: true
    - run: sudo apt-get install -qq -y gettext
    - run: echo $GCLOUD_SERVICE_KEY
    - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
    - run: gcloud --quiet config set run/region us-central1
    - run: gcloud --quiet config set project prueba-arquitectura
    - run: gcloud info
    - run: gcloud builds submit --tag gcr.io/prueba-arquitectura/portal-backend-staging --async
    - run: sleep 120
    - run: gcloud run deploy portal-backend-staging --image gcr.io/prueba-arquitectura/portal-backend-staging --platform managed --set-env-vars NODE_ENV=staging,MONGO_USERNAME=$MONGO_USERNAME,MONGO_PASSWORD=$MONGO_PASSWORD,MONGO_DB=amicar,MONGO_HOST=$MONGO_HOST,ROLLBAR_TOKEN=$ROLLBAR_TOKEN
    env:
      CI: true
      GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      MONGO_USERNAME: ${{ secrets.MONGO_USERNAME_STAGING }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD_STAGING }}
      MONGO_HOST: ${{ secrets.MONGO_HOST_STAGING }}
      ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN_STAGING }}

  # deploy_testing:
  #   runs-on: google/cloud-sdk
  #   steps:
  #   - run: apt-get install -qq -y gettext
  #   - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #   - run: gcloud --quiet config set run/region us-central1
  #   - run: gcloud --quiet config set project prueba-arquitectura
  #   - run: gcloud builds submit --tag gcr.io/prueba-arquitectura/portal-backend-testing --async
  #   - run: sleep 120
  #   - run: gcloud beta run deploy --image gcr.io/prueba-arquitectura/portal-backend-testing --platform managed --set-env-vars NODE_ENV=test,PG_DB=$PG_DB_TESTING,PG_HOST=$PG_HOST_TESTING,PG_USER=$PG_USER_TESTING,PG_PW=$PG_PW_TESTING
