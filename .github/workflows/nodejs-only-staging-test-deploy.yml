# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Portal Backend - Master - Node.js CI

on:
  push:
    branches:
      - 'staging'
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: admin
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: pass
        volumes:
          - init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

    strategy:
      matrix:
        node-version: [8.x]
        mongodb-version: [4.0]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - run: npm install
      - run: npm run test
      - run: npm run build
        env:
          TERM: xterm
    env:
      CI: true
      NODE_ENV: test
      PORT: 8085
      SERVER_HOST: 127.0.0.1
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_USERNAME: amicar
      MONGO_PASSWORD: amicar
      MONGO_DB: amicar
      MONGO_HOST: 127.0.0.1:27017
      ACTIONS_RUNNER_DEBUG: true

  deploy_staging:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - run: mongo < init-mongo.js
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
      - run: sudo apt-get install -qq -y gettext
      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY_PRODUCTION }}
      - run: gcloud --quiet config set run/region us-east1
      - run: gcloud --quiet config set project amicar-tech-255421
      - run: gcloud info
      - run: gcloud builds submit --tag gcr.io/amicar-tech-255421/portal-backend-staging --async
      - run: sleep 120
      - run: gcloud run deploy portal-backend-staging --image gcr.io/amicar-tech-255421/portal-backend-staging --platform managed --set-env-vars NODE_ENV=staging,MONGO_USERNAME=$MONGO_USERNAME,MONGO_PASSWORD=$MONGO_PASSWORD,MONGO_DB=amicar,MONGO_HOST=$MONGO_HOST,ROLLBAR_TOKEN=$ROLLBAR_TOKEN,JWT_SECRET=$JWT_SECRET,CORE_URL=$CORE_URL,API_KEY_PORTAL=$API_KEY_PORTAL
    env:
      CI: true
      NODE_ENV: staging
      MONGO_USERNAME: ${{ secrets.MONGO_USERNAME_STAGING }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD_STAGING }}
      MONGO_HOST: ${{ secrets.MONGO_HOST_STAGING }}
      ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN_STAGING }}
      JWT_SECRET: ${{ secrets.JWT_SECRET_STAGING }}
      CORE_URL: ${{ secrets.CORE_URL_STAGING }}
      API_KEY_PORTAL: ${{ secrets.API_KEY_PORTAL_STAGING }}
