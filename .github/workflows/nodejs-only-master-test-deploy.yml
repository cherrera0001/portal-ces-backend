# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Amices Backend - Master - Node.js CI

on:
  push:
    branches:
      - 'master'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.0

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - run: npm install
      - run: npm run fixtures
      - run: npm run test
    env:
      CI: true
      NODE_ENV: test
      PORT: 8085
      SERVER_HOST: 127.0.0.1
      MONGO_URI_AMICES: mongodb://localhost:27017/amices_test?authSource=admin&retryWrites=true&w=majority
      MONGO_URI_EFICAR: mongodb://localhost:27017/eficar_test?authSource=admin&retryWrites=true&w=majority
      ACTIONS_RUNNER_DEBUG: true
      TERM: xterm
  deploy_master:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
      - run: sudo apt-get install -qq -y gettext
      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY_PRODUCTION }}
      - run: gcloud --quiet config set run/region us-east1
      - run: gcloud --quiet config set project ${{ secrets.GCP_PROJECT_PRODUCTION }}
      - run: gcloud info
      - run: gcloud builds submit --config=.github/cloudbuild.yaml --substitutions=_GCP_PROJECT=$GCP_PROJECT_PRODUCTION,_DEPLOY_IMG=$NODE_ENV
      - run: gcloud run deploy amices-backend-production --image gcr.io/${{ secrets.GCP_PROJECT_PRODUCTION }}/amices-backend-production --platform managed --set-env-vars NODE_ENV=$NODE_ENV,MONGO_URI_AMICES=$MONGO_URI_AMICES,MONGO_URI_EFICAR=$MONGO_URI_EFICAR,ROLLBAR_TOKEN=$ROLLBAR_TOKEN,JWT_SECRET=$JWT_SECRET,CORE_URL=$CORE_URL,API_KEY_PORTAL=$API_KEY_PORTAL
    env:
      CI: true
      NODE_ENV: production
      MONGO_URI_AMICES: ${{ secrets.MONGO_URI_AMICES_PRODUCTION }}
      MONGO_URI_EFICAR: ${{ secrets.MONGO_URI_EFICAR_PRODUCTION }}
      ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN_PRODUCTION }}
      JWT_SECRET: ${{ secrets.JWT_SECRET_PRODUCTION }}
      CORE_URL: ${{ secrets.CORE_URL_PRODUCTION }}
      API_KEY_PORTAL: ${{ secrets.API_KEY_PORTAL_PRODUCTION }}
      GCP_PROJECT_PRODUCTION: ${{ secrets.GCP_PROJECT_PRODUCTION }}
