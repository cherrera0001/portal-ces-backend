input Customer{
  rut: String,
  email: String,
  phone: String
}

input Vehicle{
  type: String,
  price: Int
}
input ModifyTerm
  {
    paymentNumber: Int,
    payment: Int
  }

input Loan{
  downPayment: Int,
  balance: Int,
  downPaymentPercentage: Int,
  term: Int,
  startDate: String,
  firstDueDate: String,
  rateType: String,
  saleChannel: String,
  saleChannelType: String,
  salesRoomId: Int,
  immediateOption: Boolean,
  accessories: Int,
  tradeInCarValue: Int,
  modifyTerm: [ModifyTerm]
}

input Simulation{
  transactionId: String,
  sellerIdentificationValue: String,
  amicarExecutiveIdentificationValue: String,
  customer: Customer,
  vehicle: Vehicle,
  loan: Loan
}
extend type Query {
  simulation(simulation: Simulation): Prueba
}
type Prueba {
  name: String
}
type FinalLoanValues {
  loanType: String,
  term: Int,
  balance: Int,
  UFValue: Int,
  totalSurchargesToMAF: Int,
  totalSurchargesToQuote: Int,
  factorTotal: Int,
  promissoryFactor: Int,
  promissoryValue: Int,
  totalToFinance: Int,
  totalToFinanceUF: Int,
  finalCapital: Int,
  daysDelayedFirstDue: Int,
  delayedInterest: Int,
  monthlyPayment: Int,
  customerRate: Int,
  dealerRate: Int,
  dealerCommission: Int,
  amicarCommission: Int
},
type EquivalentAnnualCharge {
  annualCAE: Int,
  monthlyCAE: Int,
  totalLoanCost: Int
},
type AmortizationSchedule{
  paymentNumber: Int,
  expirationDate: String,
  daysBetweenExpirationsDates: Int,
  payment: Int,
  quotaType: String,
  beginningBalance: Int,
  principal: Int,
  interest: Int,
  endingBalance: Int,
  cumulativeInterest: Int
}
type AmicarAssistance{
  id: Int,
  description: String,
  value: Int,
  currencyType: String,
  factorCalculated: Int,
  selected: Boolean,
  isRequired: Boolean
}
type DealerSurcharges{
  id: Int,
  description: String,
  value: Int,
  isEditable: Boolean,
  currencyType: String,
  factorCalculated: Int,
  selected: Boolean,
  isRequired: Boolean
},
type FinancingEntitySurcharges {
  id: Int,
  description: String,
  value: Int,
  isEditable: Boolean,
  currencyType: String,
  factorCalculated: Int,
  selected: Boolean,
  isRequired: Boolean
}
type SurchargesAndInsurances {
  amicarAssistance: [AmicarAssistance]
  dealerSurcharges: [DealerSurcharges]
  dealerInsurance: [FinancingEntitySurcharges]
  financingEntitySurcharges: [FinancingEntitySurcharges]
}
type responseSimulation {
  finalLoanValues: FinalLoanValues,
  equivalentAnnualCharge:EquivalentAnnualCharge,
  amortizationSchedule: [AmortizationSchedule],
  surchargesAndInsurances: SurchargesAndInsurances
}
