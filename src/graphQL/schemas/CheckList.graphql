scalar Upload

type Document {
  id: String
  uuid: String
}

type DocumentSet {
  id: String
  name: String
  step: Int
  documentType: String
  wasSent: Boolean
  feError: String
  documents: [Document]
}

type CheckList {
  financingEntityId: String
  loanId: String
  checkList: [DocumentSet]
}

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}

type Query {
  getCheckList(loanId: String!): CheckList
}

type Mutation {
  uploadDocuments(files: [Upload]!, loanId: String!, documentSetId: String!, documentType: String!): CheckList
  updateDocumentStatus(loanId: String!, documentSetId: String!, state: String!): Boolean
}

type Subscription {
  documentStatusUpdated(loanId: String!): CheckList
}
