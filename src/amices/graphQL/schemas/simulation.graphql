input Customer {
  identificationValue: String
  identificationTypeId: Int
  email: String
  phone: String
  name: String
  lastName: String
  motherLastName: String
}

input Vehicle {
  type: String
  price: Int
  brandName: String
  modelName: String
  version: String
  year: Int
}

input ModifyTerm {
  paymentNumber: Int
  payment: Int
}

input RateTypeInput {
  id: Int
  parentId: Int
  externalCode: String
  name: String
  cod: String
  description: String
}

type RateType {
  id: Int
  parentId: Int
  externalCode: String
  name: String
  cod: String
  description: String
}

input Loan {
  downPayment: Int
  balance: Int
  downPaymentPercentage: Int
  term: Int
  startDate: String
  firstDueDate: String
  financingEntity: String
  rateType: String
  saleChannel: String
  saleChannelType: String
  salesRoomId: Int
  immediateOption: Boolean
  accessories: Int
  tradeInCarValue: Int
  modifyTerm: [ModifyTerm]
  type: String
}

input AmicarAssistanceInput {
  id: Int
  description: String
  value: Float
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}
input DealerSurchargesInput {
  id: Int
  description: String
  value: Float
  isEditable: Boolean
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

input FinancingEntitySurchargesInput {
  id: Int
  description: String
  value: Float
  isEditable: Boolean
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

input FinancingEntityInsuranceInput {
  id: Int
  description: String
  value: Float
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

input SurchargesAndInsurancesInput {
  amicarAssistance: [AmicarAssistanceInput]
  dealerSurcharges: [FinancingEntitySurchargesInput]
  dealerInsurance: [FinancingEntitySurchargesInput]
  financingEntitySurcharges: [FinancingEntitySurchargesInput]
  financingEntityInsurance: [FinancingEntityInsuranceInput]
}

input TradeInCarInput {
  type: String
  price: Int
  brandName: String
  modelName: String
  version: String
  year: Int
  mileage: Int
  prepaidAmount: Int
  licensePlate: String
  additionalDescription: String
}

input VfgInput {
  beginningBalance: Int
  cumulativeInterest: Int
  daysBetweenExpirationsDates: Int
  endingBalance: Int
  expirationDate: String
  interest: Int
  payment: Int
  paymentNumber: Int
  principal: Int
  quotaType: String
}

input SelectedScenarioInput {
  surchargesAndInsurances: SurchargesAndInsurancesInput
  loanType: String
  rateType: RateTypeInput
  monthlyPayment: Float
  dealerCommission: Float
  term: Int
  customerRate: Float
  vfg: VfgInput
  totalLoanCost: Float
  totalToFinance: Float
  cae: Float
}

input Simulation {
  transactionId: String
  sellerIdentificationValue: String
  amicarExecutiveIdentificationValue: String
  customer: Customer
  vehicle: Vehicle
  loan: Loan
  surchargesAndInsurances: SurchargesAndInsurancesInput
  selectedScenario: SelectedScenarioInput
  tradeInCar: TradeInCarInput
}

type FinalLoanValues {
  loanType: String
  rateType: RateType
  term: Int
  balance: Int
  UFValue: Float
  totalSurchargesToMAF: Int
  totalSurchargesToQuote: Int
  factorTotal: Float
  promissoryFactor: Float
  promissoryValue: Int
  totalToFinance: Int
  totalToFinanceUF: Float
  finalCapital: Int
  daysDelayedFirstDue: Int
  delayedInterest: Int
  monthlyPayment: Int
  customerRate: Float
  dealerRate: Float
  dealerCommission: Int
  amicarCommission: Int
}

type EquivalentAnnualCharge {
  annualCAE: Float
  monthlyCAE: Float
  totalLoanCost: Int
}

type AmortizationSchedule {
  paymentNumber: Int
  expirationDate: String
  daysBetweenExpirationsDates: Int
  payment: Int
  quotaType: String
  beginningBalance: Int
  principal: Int
  interest: Int
  endingBalance: Int
  cumulativeInterest: Int
}

type AmicarAssistance {
  id: Int
  description: String
  value: Float
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

type DealerSurcharges {
  id: Int
  description: String
  value: Float
  isEditable: Boolean
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

type FinancingEntitySurcharges {
  id: Int
  description: String
  value: Float
  isEditable: Boolean
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

type FinancingEntityInsurance {
  id: Int
  description: String
  value: Float
  currencyType: String
  factorCalculated: Float
  selected: Boolean
  isRequired: Boolean
}

type SurchargesAndInsurances {
  amicarAssistance: [AmicarAssistance]
  dealerSurcharges: [DealerSurcharges]
  dealerInsurance: [FinancingEntitySurcharges]
  financingEntitySurcharges: [FinancingEntitySurcharges]
  financingEntityInsurance: [FinancingEntityInsurance]
}

type SimulationResponse {
  finalLoanValues: FinalLoanValues
  equivalentAnnualCharge: EquivalentAnnualCharge
  amortizationSchedule: [AmortizationSchedule]
  surchargesAndInsurances: SurchargesAndInsurances
}

type SimulationEmailResponse {
  status: String
}

extend type Query {
  Simulation(simulation: Simulation!): [SimulationResponse]
}

extend type Mutation {
  sendEmail(
    mailTo: String!
    name: String!
    lastName: String!
    term: Float!
    totalToFinance: Float!
    cae: Float!
    loanType: String!
    vfg: Float
    price: Float!
    downPayment: Float!
    downPaymentPercentage: Float!
    monthlyPayment: Float!
  ): SimulationEmailResponse
  saveSimulation(simulation: Simulation): Int
}
