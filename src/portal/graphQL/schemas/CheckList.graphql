scalar Upload

type Document {
  id: String
  uuid: String
}

# type DocumentSet {
# id: String
# name: String
# step: Int
# documentType: String
# wasSent: Boolean
# feError: String
# documents: [Document]
# }

# type File {
#   filename: String!
#   mimetype: String!
#   encoding: String!
# }

type CheckListItem {
  id: Int
  checklistId: Int
  coreParamId: Int
  value: String
  folderPath: String
  uuid: String
  # CoreParam: {
  #     name: String
  # }
}

type CheckList {
  ChecklistItems: [CheckListItem]
}

type FinancingEntity {
  id: Int
  identificationValue: String
  name: String
}

type AuctionParticipants {
  id: String
  status: String
  FinancingEntity: FinancingEntity
  Checklists: [CheckList]
}

type Query {
  getCheckList(loanApplicationId: String!): [AuctionParticipants]
}

type Mutation {
  uploadDocuments(files: [Upload]!, loanApplicationId: String!): Boolean
  # updateDocumentStatus(loanApplicationId: String!, documentSetId: String!, state: String!): Boolean
}
